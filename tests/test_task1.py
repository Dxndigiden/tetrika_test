import pytest

from task1.solution import strict


@strict
def sum_two(a: int, b: int) -> int:
    '''–°–ª–æ–∂–µ–Ω–∏–µ –¥–≤—É—Ö —Ü–µ–ª—ã—Ö'''
    return a + b


@strict
def concat(a: str, b: str) -> str:
    '''–°–∫–ª–µ–π–∫–∞ –¥–≤—É—Ö —Å—Ç—Ä–æ–∫'''
    return a + b


@strict
def divide(a: float, b: float) -> float:
    '''–î–µ–ª–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π'''
    return a / b


@strict
def is_weekend(flag: bool) -> bool:
    '''–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–ª–µ–≤–æ–≥–æ —Ñ–ª–∞–≥–∞'''
    return flag


def test_addition_with_valid_ints():
    '''–£—Å–ø–µ—à–Ω–æ–µ —Å–ª–æ–∂–µ–Ω–∏–µ int'''
    assert sum_two(42, 8) == 50
    assert sum_two(-3, 3) == 0


def test_string_concatenation_success():
    '''–£—Å–ø–µ—à–Ω–∞—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è —Å—Ç—Ä–æ–∫'''
    assert concat('foo', 'bar') == 'foobar'
    assert concat('üî•', 'üêç') == 'üî•üêç'


def test_float_division_success():
    '''–£—Å–ø–µ—à–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ float'''
    assert divide(9.0, 3.0) == 3.0
    assert divide(5.5, 2.2) == 2.5


def test_boolean_handling_success():
    '''–£—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π'''
    assert is_weekend(True) is True
    assert is_weekend(False) is False


def test_addition_type_error():
    '''–û—à–∏–±–∫–∞ —Ç–∏–ø–∞ –≤ —Å–ª–æ–∂–µ–Ω–∏–∏'''
    with pytest.raises(TypeError):
        sum_two(1, 25.5)
    with pytest.raises(TypeError):
        sum_two(1.1, 2)


def test_string_concat_type_error():
    '''–û—à–∏–±–∫–∞ —Ç–∏–ø–∞ –≤ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏'''
    with pytest.raises(TypeError):
        concat('string', 123)
    with pytest.raises(TypeError):
        concat(52, 'string')


def test_float_division_type_error():
    '''–û—à–∏–±–∫–∞ —Ç–∏–ø–∞ –≤ –¥–µ–ª–µ–Ω–∏–∏'''
    with pytest.raises(TypeError):
        divide(9, 3.0)
    with pytest.raises(TypeError):
        divide(10, True)


def test_bool_argument_type_error():
    '''–û—à–∏–±–∫–∞ —Ç–∏–ø–∞ –¥–ª—è –±—É–ª–µ–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞'''
    with pytest.raises(TypeError):
        is_weekend('yes')
    with pytest.raises(TypeError):
        is_weekend(1)
